function [sos] = makeSOS(b,a)
% unlike MATLAB's tf2sos, this function directly computes an SOS matrix
% without separate gains, which is handy in RAZR context.
% However, this skript is more of a rearranging tool for existing second
% order cascades as generated by 'jt' and 'cq' filter generation routines.
% For higher order filter (e.g. generated by 'yw'), tf2sos serves as a
% fallback.
% ------------------------------------------------------------------------
% Input:
% b - (Cell Array) Nominator Coefficients for cascade
% a - (Cell Array) Denominator Coefficients for cascade
% Output
% sos - second order structure matrix
% -------------------------------------------------------------------------


%------------------------------------------------------------------------------
% RAZR engine for Mathwork's MATLAB
%
% Version 0.96.2
%
% Author(s): Christoph Kirsch
%
% Copyright (c) 2014-2021, Torben Wendt, Steven van de Par, Stephan Ewert,
% University of Oldenburg, Germany.
%
% This work is licensed under the
% Creative Commons Attribution-NonCommercial-NoDerivs 4.0 International
% License (CC BY-NC-ND 4.0).
% To view a copy of this license, visit
% http://creativecommons.org/licenses/by-nc-nd/4.0/ or send a letter to
% Creative Commons, 444 Castro Street, Suite 900, Mountain View, California,
% 94041, USA.
%------------------------------------------------------------------------------


try
    B = cell2mat(b);
    A = cell2mat(a);
    if size(B,2) == 3 && size(A,2) == 3 % if things are nice and second order
        sos = [B A];                    % generating the SOS matrix is fairly simple
        sos = sos./A(:,1);
    else
        error('no second order')
    end
catch % otherwise, we have to rely on a loop
    sos = [];
    for k = 1:length(b)
         [sosTmp,g] = tf2sos(b{k},a{k}); % Temporary matrix for gain compensation
         sos = [sos; [sosTmp(:,1:3).*g sosTmp(:,4:end)]];
    end    
end
